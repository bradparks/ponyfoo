header.dc-header
  h1.dc-heading Nicolás Bevacqua
  div.dc-role JavaScript and Web Performance Consultant

article.de-host
  section.de-column.de-column-padded
    div.am-photo-section
      img.am-photo(src='/img/profile.jpg', alt='')
      sub.am-photo-disclaimer Disclaimer: it might be possible that I don’t look this good anymore.
    section.md-markdown
      p.am-about
        span='I '
        img.tj-emoji(draggable='false', alt='❤', src='https://twemoji.maxcdn.com/2/72x72/2764.png')
        span='️ the web. I am a '
        a(data-email='mailto:consulting@ponyfoo.com', target='_blank') consultant
        span=', a conference '
        a(href='/speaking') speaker
        span=', the author of '
        a(href='/books/javascript-application-design') JavaScript Application Design
        span=', an '
        a(href='/') opinionated blogger
        span=', and an '
        a(href='/opensource') open-source
        span=' evangelist. I participate actively in the online JavaScript '
        a(href='https://twitter.com/nzgb') community
        span=' — as well as '
        em offline
        span=' in beautiful Buenos Aires. '
      p
        span='I like writing about the current '
        a(href='/articles/stop-breaking-the-web', title='Stop Breaking the Web') state of the web
        span=', new features coming our way in '
        a(href='/articles/tagged/es6-in-depth', title='ES6 in Depth') ES6
        span=', leveraging '
        a(href='/articles/talk-about-web-performance', title="Let’s talk about Web Performance") web performance
        span=' optimization to make our sites much faster, the importance of '
        a(href='/articles/progressive-web', title='The Progressive Web') progressive enhancement
        span=', sane '
        a(href='/articles/gulp-grunt-whatever', title='Gulp, Grunt, Whatever') build processes
        span=' and improving quality in your applications with '
        a(href='/articles/why-i-write-plain-javascript-modules', title='Why I Write Plain JavaScript Modules') modular design
        span='. I used to spend a lot of my time answering questions on '
        a(href='https://stackoverflow.com/users/389745/bevacqua', target='_blank') Stack Overflow
        span=', but now I spend most of that time doing open-source work instead. '
      p
        span='I really enjoy developing small open-source modules that I publish to '
        code npm
        span=' and '
        a(href='https://github.com/bevacqua', target='_blank') GitHub
        span='. Some of these are small utilities that work well in both Node.js and the browser, and some others are front-end components that make it easier to use certain parts of the web. My favorite approach to open-source is developing small modules because that way you can '
        em compose
        span=' them in interesting ways and it also fosters '
        em reusability
        span='. Learning how to write modular code is one of the most valuable things you can do to improve your skills as a JavaScript developer. '
      p
        span='I have used a variety of tools when it comes to development. Trying out many different tools, '
        em creating some of your own
        span=', and experimenting are the best ways to really understand how they work and the tradeoffs between all the different tools and frameworks out there. I favor simple solutions. That’s why I prefer to use '
        code npm run
        span=' and Bash in my builds. I also like '
        a(href='http://facebook.github.io/react/', title='Facebook React', target='_blank') React
        span=' and '
        a(href='https://github.com/taunus/taunus', title='Taunus Universal MVC', target='_blank') Taunus
        span=' when it comes to view rendering, because they’re '
        strong simpler and more performant
        span=' than anything else in the JavaScript framework landscape. I use AWS for deployments because I like having fine-grained control, but I’ve also experimented with other providers like Heroku and Digital Ocean. '
      p
        span='Re-inventing the wheel is '
        strong a necessary evil
        span=' if we want to learn from mistakes made in the past '
        em (regardless of who made them)
        span='. '

  include ../partials/aside
